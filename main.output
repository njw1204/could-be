Terminals unused in grammar

   THEN
   OTHER
   DE_DOT


Grammar

    0 $accept: program $end

    1 program: MAINPROG ID DE_SEMICOLON declarations subprogram_declarations compound_statement

    2 declarations: type identifier_list DE_SEMICOLON declarations
    3             | %empty

    4 identifier_list: ID
    5                | ID DE_COMMA identifier_list

    6 type: standard_type
    7     | standard_type DE_LSB INTEGER DE_RSB

    8 standard_type: TYPE_INT
    9              | TYPE_FLOAT

   10 subprogram_declarations: subprogram_declaration subprogram_declarations
   11                        | %empty

   12 subprogram_declaration: subprogram_head declarations compound_statement

   13 subprogram_head: FUNCTION ID arguments DE_COLON standard_type DE_SEMICOLON
   14                | PROCEDURE ID arguments DE_SEMICOLON

   15 arguments: DE_LP parameter_list DE_RP
   16          | %empty

   17 parameter_list: identifier_list DE_COLON type
   18               | identifier_list DE_COLON type DE_SEMICOLON parameter_list

   19 compound_statement: BEGIN_BODY statement_list END_BODY

   20 statement_list: statement
   21               | statement DE_SEMICOLON statement_list

   22 statement: variable DE_ASSIGN expression
   23          | print_statement
   24          | procedure_statement
   25          | compound_statement
   26          | if_statement
   27          | while_statement
   28          | for_statement
   29          | RETURN expression
   30          | NOP

   31 if_statement: IF expression DE_COLON statement
   32             | IF expression DE_COLON statement ELSE DE_COLON statement
   33             | IF expression DE_COLON statement elif_statement
   34             | IF expression DE_COLON statement elif_statement ELSE DE_COLON statement

   35 elif_statement: ELIF expression DE_COLON statement elif_statement
   36               | ELIF expression DE_COLON statement

   37 while_statement: WHILE expression DE_COLON statement
   38                | WHILE expression DE_COLON statement ELSE DE_COLON statement

   39 for_statement: FOR in_expression DE_COLON statement
   40              | FOR in_expression DE_COLON statement ELSE DE_COLON statement

   41 print_statement: PRINT
   42                | PRINT DE_LP expression DE_RP

   43 variable: ID
   44         | ID DE_LSB expression DE_RSB

   45 procedure_statement: ID DE_LP actual_parameter_expression DE_RP

   46 actual_parameter_expression: expression_list
   47                            | %empty

   48 expression_list: expression
   49                | expression DE_COMMA expression_list

   50 expression: simple_expression
   51           | in_expression
   52           | simple_expression relop simple_expression

   53 in_expression: simple_expression IN simple_expression

   54 simple_expression: term
   55                  | term addop simple_expression

   56 term: factor
   57     | factor multop term

   58 factor: INTEGER
   59       | FLOAT
   60       | variable
   61       | procedure_statement
   62       | OP_NOT factor
   63       | sign factor

   64 sign: OP_PLUS
   65     | OP_MINUS

   66 relop: OP_GT
   67      | OP_GE
   68      | OP_LT
   69      | OP_LE
   70      | OP_EQ
   71      | OP_NE

   72 addop: OP_PLUS
   73      | OP_MINUS

   74 multop: OP_MULT
   75       | OP_DIV


Terminals, with rules where they appear

$end (0) 0
error (256)
MAINPROG (258) 1
FUNCTION (259) 13
PROCEDURE (260) 14
BEGIN_BODY (261) 19
END_BODY (262) 19
IF (263) 31 32 33 34
THEN (264)
ELIF (265) 35 36
ELSE (266) 32 34 38 40
NOP (267) 30
WHILE (268) 37 38
FOR (269) 39 40
RETURN (270) 29
PRINT (271) 41 42
IN (272) 53
TYPE_INT (273) 8
TYPE_FLOAT (274) 9
ID (275) 1 4 5 13 14 43 44 45
INTEGER (276) 7 58
FLOAT (277) 59
OTHER (278)
OP_PLUS (279) 64 72
OP_MINUS (280) 65 73
OP_MULT (281) 74
OP_DIV (282) 75
OP_LT (283) 68
OP_GT (284) 66
OP_NE (285) 71
OP_LE (286) 69
OP_GE (287) 67
OP_EQ (288) 70
OP_NOT (289) 62
DE_SEMICOLON (290) 1 2 13 14 18 21
DE_COMMA (291) 5 49
DE_DOT (292)
DE_ASSIGN (293) 22
DE_LP (294) 15 42 45
DE_RP (295) 15 42 45
DE_LSB (296) 7 44
DE_RSB (297) 7 44
DE_COLON (298) 13 17 18 31 32 33 34 35 36 37 38 39 40


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
declarations (46)
    on left: 2 3, on right: 1 2 12
identifier_list (47)
    on left: 4 5, on right: 2 5 17 18
type (48)
    on left: 6 7, on right: 2 17 18
standard_type (49)
    on left: 8 9, on right: 6 7 13
subprogram_declarations (50)
    on left: 10 11, on right: 1 10
subprogram_declaration (51)
    on left: 12, on right: 10
subprogram_head (52)
    on left: 13 14, on right: 12
arguments (53)
    on left: 15 16, on right: 13 14
parameter_list (54)
    on left: 17 18, on right: 15 18
compound_statement (55)
    on left: 19, on right: 1 12 25
statement_list (56)
    on left: 20 21, on right: 19 21
statement (57)
    on left: 22 23 24 25 26 27 28 29 30, on right: 20 21 31 32 33 34
    35 36 37 38 39 40
if_statement (58)
    on left: 31 32 33 34, on right: 26
elif_statement (59)
    on left: 35 36, on right: 33 34 35
while_statement (60)
    on left: 37 38, on right: 27
for_statement (61)
    on left: 39 40, on right: 28
print_statement (62)
    on left: 41 42, on right: 23
variable (63)
    on left: 43 44, on right: 22 60
procedure_statement (64)
    on left: 45, on right: 24 61
actual_parameter_expression (65)
    on left: 46 47, on right: 45
expression_list (66)
    on left: 48 49, on right: 46 49
expression (67)
    on left: 50 51 52, on right: 22 29 31 32 33 34 35 36 37 38 42 44
    48 49
in_expression (68)
    on left: 53, on right: 39 40 51
simple_expression (69)
    on left: 54 55, on right: 50 52 53 55
term (70)
    on left: 56 57, on right: 54 55 57
factor (71)
    on left: 58 59 60 61 62 63, on right: 56 57 62 63
sign (72)
    on left: 64 65, on right: 63
relop (73)
    on left: 66 67 68 69 70 71, on right: 52
addop (74)
    on left: 72 73, on right: 55
multop (75)
    on left: 74 75, on right: 57


State 0

    0 $accept: . program $end

    MAINPROG  shift, and go to state 1

    program  go to state 2


State 1

    1 program: MAINPROG . ID DE_SEMICOLON declarations subprogram_declarations compound_statement

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: MAINPROG ID . DE_SEMICOLON declarations subprogram_declarations compound_statement

    DE_SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: MAINPROG ID DE_SEMICOLON . declarations subprogram_declarations compound_statement

    TYPE_INT    shift, and go to state 6
    TYPE_FLOAT  shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 8
    type           go to state 9
    standard_type  go to state 10


State 6

    8 standard_type: TYPE_INT .

    $default  reduce using rule 8 (standard_type)


State 7

    9 standard_type: TYPE_FLOAT .

    $default  reduce using rule 9 (standard_type)


State 8

    1 program: MAINPROG ID DE_SEMICOLON declarations . subprogram_declarations compound_statement

    FUNCTION   shift, and go to state 11
    PROCEDURE  shift, and go to state 12

    $default  reduce using rule 11 (subprogram_declarations)

    subprogram_declarations  go to state 13
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


State 9

    2 declarations: type . identifier_list DE_SEMICOLON declarations

    ID  shift, and go to state 16

    identifier_list  go to state 17


State 10

    6 type: standard_type .
    7     | standard_type . DE_LSB INTEGER DE_RSB

    DE_LSB  shift, and go to state 18

    $default  reduce using rule 6 (type)


State 11

   13 subprogram_head: FUNCTION . ID arguments DE_COLON standard_type DE_SEMICOLON

    ID  shift, and go to state 19


State 12

   14 subprogram_head: PROCEDURE . ID arguments DE_SEMICOLON

    ID  shift, and go to state 20


State 13

    1 program: MAINPROG ID DE_SEMICOLON declarations subprogram_declarations . compound_statement

    BEGIN_BODY  shift, and go to state 21

    compound_statement  go to state 22


State 14

   10 subprogram_declarations: subprogram_declaration . subprogram_declarations

    FUNCTION   shift, and go to state 11
    PROCEDURE  shift, and go to state 12

    $default  reduce using rule 11 (subprogram_declarations)

    subprogram_declarations  go to state 23
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


State 15

   12 subprogram_declaration: subprogram_head . declarations compound_statement

    TYPE_INT    shift, and go to state 6
    TYPE_FLOAT  shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 24
    type           go to state 9
    standard_type  go to state 10


State 16

    4 identifier_list: ID .
    5                | ID . DE_COMMA identifier_list

    DE_COMMA  shift, and go to state 25

    $default  reduce using rule 4 (identifier_list)


State 17

    2 declarations: type identifier_list . DE_SEMICOLON declarations

    DE_SEMICOLON  shift, and go to state 26


State 18

    7 type: standard_type DE_LSB . INTEGER DE_RSB

    INTEGER  shift, and go to state 27


State 19

   13 subprogram_head: FUNCTION ID . arguments DE_COLON standard_type DE_SEMICOLON

    DE_LP  shift, and go to state 28

    $default  reduce using rule 16 (arguments)

    arguments  go to state 29


State 20

   14 subprogram_head: PROCEDURE ID . arguments DE_SEMICOLON

    DE_LP  shift, and go to state 28

    $default  reduce using rule 16 (arguments)

    arguments  go to state 30


State 21

   19 compound_statement: BEGIN_BODY . statement_list END_BODY

    BEGIN_BODY  shift, and go to state 21
    IF          shift, and go to state 31
    NOP         shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    RETURN      shift, and go to state 35
    PRINT       shift, and go to state 36
    ID          shift, and go to state 37

    compound_statement   go to state 38
    statement_list       go to state 39
    statement            go to state 40
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


State 22

    1 program: MAINPROG ID DE_SEMICOLON declarations subprogram_declarations compound_statement .

    $default  reduce using rule 1 (program)


State 23

   10 subprogram_declarations: subprogram_declaration subprogram_declarations .

    $default  reduce using rule 10 (subprogram_declarations)


State 24

   12 subprogram_declaration: subprogram_head declarations . compound_statement

    BEGIN_BODY  shift, and go to state 21

    compound_statement  go to state 47


State 25

    5 identifier_list: ID DE_COMMA . identifier_list

    ID  shift, and go to state 16

    identifier_list  go to state 48


State 26

    2 declarations: type identifier_list DE_SEMICOLON . declarations

    TYPE_INT    shift, and go to state 6
    TYPE_FLOAT  shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 49
    type           go to state 9
    standard_type  go to state 10


State 27

    7 type: standard_type DE_LSB INTEGER . DE_RSB

    DE_RSB  shift, and go to state 50


State 28

   15 arguments: DE_LP . parameter_list DE_RP

    ID  shift, and go to state 16

    identifier_list  go to state 51
    parameter_list   go to state 52


State 29

   13 subprogram_head: FUNCTION ID arguments . DE_COLON standard_type DE_SEMICOLON

    DE_COLON  shift, and go to state 53


State 30

   14 subprogram_head: PROCEDURE ID arguments . DE_SEMICOLON

    DE_SEMICOLON  shift, and go to state 54


State 31

   31 if_statement: IF . expression DE_COLON statement
   32             | IF . expression DE_COLON statement ELSE DE_COLON statement
   33             | IF . expression DE_COLON statement elif_statement
   34             | IF . expression DE_COLON statement elif_statement ELSE DE_COLON statement

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 62
    in_expression        go to state 63
    simple_expression    go to state 64
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 32

   30 statement: NOP .

    $default  reduce using rule 30 (statement)


State 33

   37 while_statement: WHILE . expression DE_COLON statement
   38                | WHILE . expression DE_COLON statement ELSE DE_COLON statement

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 68
    in_expression        go to state 63
    simple_expression    go to state 64
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 34

   39 for_statement: FOR . in_expression DE_COLON statement
   40              | FOR . in_expression DE_COLON statement ELSE DE_COLON statement

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    in_expression        go to state 69
    simple_expression    go to state 70
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 35

   29 statement: RETURN . expression

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 71
    in_expression        go to state 63
    simple_expression    go to state 64
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 36

   41 print_statement: PRINT .
   42                | PRINT . DE_LP expression DE_RP

    DE_LP  shift, and go to state 72

    $default  reduce using rule 41 (print_statement)


State 37

   43 variable: ID .
   44         | ID . DE_LSB expression DE_RSB
   45 procedure_statement: ID . DE_LP actual_parameter_expression DE_RP

    DE_LP   shift, and go to state 73
    DE_LSB  shift, and go to state 74

    $default  reduce using rule 43 (variable)


State 38

   25 statement: compound_statement .

    $default  reduce using rule 25 (statement)


State 39

   19 compound_statement: BEGIN_BODY statement_list . END_BODY

    END_BODY  shift, and go to state 75


State 40

   20 statement_list: statement .
   21               | statement . DE_SEMICOLON statement_list

    DE_SEMICOLON  shift, and go to state 76

    $default  reduce using rule 20 (statement_list)


State 41

   26 statement: if_statement .

    $default  reduce using rule 26 (statement)


State 42

   27 statement: while_statement .

    $default  reduce using rule 27 (statement)


State 43

   28 statement: for_statement .

    $default  reduce using rule 28 (statement)


State 44

   23 statement: print_statement .

    $default  reduce using rule 23 (statement)


State 45

   22 statement: variable . DE_ASSIGN expression

    DE_ASSIGN  shift, and go to state 77


State 46

   24 statement: procedure_statement .

    $default  reduce using rule 24 (statement)


State 47

   12 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 12 (subprogram_declaration)


State 48

    5 identifier_list: ID DE_COMMA identifier_list .

    $default  reduce using rule 5 (identifier_list)


State 49

    2 declarations: type identifier_list DE_SEMICOLON declarations .

    $default  reduce using rule 2 (declarations)


State 50

    7 type: standard_type DE_LSB INTEGER DE_RSB .

    $default  reduce using rule 7 (type)


State 51

   17 parameter_list: identifier_list . DE_COLON type
   18               | identifier_list . DE_COLON type DE_SEMICOLON parameter_list

    DE_COLON  shift, and go to state 78


State 52

   15 arguments: DE_LP parameter_list . DE_RP

    DE_RP  shift, and go to state 79


State 53

   13 subprogram_head: FUNCTION ID arguments DE_COLON . standard_type DE_SEMICOLON

    TYPE_INT    shift, and go to state 6
    TYPE_FLOAT  shift, and go to state 7

    standard_type  go to state 80


State 54

   14 subprogram_head: PROCEDURE ID arguments DE_SEMICOLON .

    $default  reduce using rule 14 (subprogram_head)


State 55

   58 factor: INTEGER .

    $default  reduce using rule 58 (factor)


State 56

   59 factor: FLOAT .

    $default  reduce using rule 59 (factor)


State 57

   64 sign: OP_PLUS .

    $default  reduce using rule 64 (sign)


State 58

   65 sign: OP_MINUS .

    $default  reduce using rule 65 (sign)


State 59

   62 factor: OP_NOT . factor

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    factor               go to state 81
    sign                 go to state 67


State 60

   60 factor: variable .

    $default  reduce using rule 60 (factor)


State 61

   61 factor: procedure_statement .

    $default  reduce using rule 61 (factor)


State 62

   31 if_statement: IF expression . DE_COLON statement
   32             | IF expression . DE_COLON statement ELSE DE_COLON statement
   33             | IF expression . DE_COLON statement elif_statement
   34             | IF expression . DE_COLON statement elif_statement ELSE DE_COLON statement

    DE_COLON  shift, and go to state 82


State 63

   51 expression: in_expression .

    $default  reduce using rule 51 (expression)


State 64

   50 expression: simple_expression .
   52           | simple_expression . relop simple_expression
   53 in_expression: simple_expression . IN simple_expression

    IN     shift, and go to state 83
    OP_LT  shift, and go to state 84
    OP_GT  shift, and go to state 85
    OP_NE  shift, and go to state 86
    OP_LE  shift, and go to state 87
    OP_GE  shift, and go to state 88
    OP_EQ  shift, and go to state 89

    $default  reduce using rule 50 (expression)

    relop  go to state 90


State 65

   54 simple_expression: term .
   55                  | term . addop simple_expression

    OP_PLUS   shift, and go to state 91
    OP_MINUS  shift, and go to state 92

    $default  reduce using rule 54 (simple_expression)

    addop  go to state 93


State 66

   56 term: factor .
   57     | factor . multop term

    OP_MULT  shift, and go to state 94
    OP_DIV   shift, and go to state 95

    $default  reduce using rule 56 (term)

    multop  go to state 96


State 67

   63 factor: sign . factor

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    factor               go to state 97
    sign                 go to state 67


State 68

   37 while_statement: WHILE expression . DE_COLON statement
   38                | WHILE expression . DE_COLON statement ELSE DE_COLON statement

    DE_COLON  shift, and go to state 98


State 69

   39 for_statement: FOR in_expression . DE_COLON statement
   40              | FOR in_expression . DE_COLON statement ELSE DE_COLON statement

    DE_COLON  shift, and go to state 99


State 70

   53 in_expression: simple_expression . IN simple_expression

    IN  shift, and go to state 83


State 71

   29 statement: RETURN expression .

    $default  reduce using rule 29 (statement)


State 72

   42 print_statement: PRINT DE_LP . expression DE_RP

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 100
    in_expression        go to state 63
    simple_expression    go to state 64
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 73

   45 procedure_statement: ID DE_LP . actual_parameter_expression DE_RP

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    $default  reduce using rule 47 (actual_parameter_expression)

    variable                     go to state 60
    procedure_statement          go to state 61
    actual_parameter_expression  go to state 101
    expression_list              go to state 102
    expression                   go to state 103
    in_expression                go to state 63
    simple_expression            go to state 64
    term                         go to state 65
    factor                       go to state 66
    sign                         go to state 67


State 74

   44 variable: ID DE_LSB . expression DE_RSB

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 104
    in_expression        go to state 63
    simple_expression    go to state 64
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 75

   19 compound_statement: BEGIN_BODY statement_list END_BODY .

    $default  reduce using rule 19 (compound_statement)


State 76

   21 statement_list: statement DE_SEMICOLON . statement_list

    BEGIN_BODY  shift, and go to state 21
    IF          shift, and go to state 31
    NOP         shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    RETURN      shift, and go to state 35
    PRINT       shift, and go to state 36
    ID          shift, and go to state 37

    compound_statement   go to state 38
    statement_list       go to state 105
    statement            go to state 40
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


State 77

   22 statement: variable DE_ASSIGN . expression

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 106
    in_expression        go to state 63
    simple_expression    go to state 64
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 78

   17 parameter_list: identifier_list DE_COLON . type
   18               | identifier_list DE_COLON . type DE_SEMICOLON parameter_list

    TYPE_INT    shift, and go to state 6
    TYPE_FLOAT  shift, and go to state 7

    type           go to state 107
    standard_type  go to state 10


State 79

   15 arguments: DE_LP parameter_list DE_RP .

    $default  reduce using rule 15 (arguments)


State 80

   13 subprogram_head: FUNCTION ID arguments DE_COLON standard_type . DE_SEMICOLON

    DE_SEMICOLON  shift, and go to state 108


State 81

   62 factor: OP_NOT factor .

    $default  reduce using rule 62 (factor)


State 82

   31 if_statement: IF expression DE_COLON . statement
   32             | IF expression DE_COLON . statement ELSE DE_COLON statement
   33             | IF expression DE_COLON . statement elif_statement
   34             | IF expression DE_COLON . statement elif_statement ELSE DE_COLON statement

    BEGIN_BODY  shift, and go to state 21
    IF          shift, and go to state 31
    NOP         shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    RETURN      shift, and go to state 35
    PRINT       shift, and go to state 36
    ID          shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 109
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


State 83

   53 in_expression: simple_expression IN . simple_expression

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    simple_expression    go to state 110
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 84

   68 relop: OP_LT .

    $default  reduce using rule 68 (relop)


State 85

   66 relop: OP_GT .

    $default  reduce using rule 66 (relop)


State 86

   71 relop: OP_NE .

    $default  reduce using rule 71 (relop)


State 87

   69 relop: OP_LE .

    $default  reduce using rule 69 (relop)


State 88

   67 relop: OP_GE .

    $default  reduce using rule 67 (relop)


State 89

   70 relop: OP_EQ .

    $default  reduce using rule 70 (relop)


State 90

   52 expression: simple_expression relop . simple_expression

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    simple_expression    go to state 111
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 91

   72 addop: OP_PLUS .

    $default  reduce using rule 72 (addop)


State 92

   73 addop: OP_MINUS .

    $default  reduce using rule 73 (addop)


State 93

   55 simple_expression: term addop . simple_expression

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    simple_expression    go to state 112
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 94

   74 multop: OP_MULT .

    $default  reduce using rule 74 (multop)


State 95

   75 multop: OP_DIV .

    $default  reduce using rule 75 (multop)


State 96

   57 term: factor multop . term

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    term                 go to state 113
    factor               go to state 66
    sign                 go to state 67


State 97

   63 factor: sign factor .

    $default  reduce using rule 63 (factor)


State 98

   37 while_statement: WHILE expression DE_COLON . statement
   38                | WHILE expression DE_COLON . statement ELSE DE_COLON statement

    BEGIN_BODY  shift, and go to state 21
    IF          shift, and go to state 31
    NOP         shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    RETURN      shift, and go to state 35
    PRINT       shift, and go to state 36
    ID          shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 114
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


State 99

   39 for_statement: FOR in_expression DE_COLON . statement
   40              | FOR in_expression DE_COLON . statement ELSE DE_COLON statement

    BEGIN_BODY  shift, and go to state 21
    IF          shift, and go to state 31
    NOP         shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    RETURN      shift, and go to state 35
    PRINT       shift, and go to state 36
    ID          shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 115
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


State 100

   42 print_statement: PRINT DE_LP expression . DE_RP

    DE_RP  shift, and go to state 116


State 101

   45 procedure_statement: ID DE_LP actual_parameter_expression . DE_RP

    DE_RP  shift, and go to state 117


State 102

   46 actual_parameter_expression: expression_list .

    $default  reduce using rule 46 (actual_parameter_expression)


State 103

   48 expression_list: expression .
   49                | expression . DE_COMMA expression_list

    DE_COMMA  shift, and go to state 118

    $default  reduce using rule 48 (expression_list)


State 104

   44 variable: ID DE_LSB expression . DE_RSB

    DE_RSB  shift, and go to state 119


State 105

   21 statement_list: statement DE_SEMICOLON statement_list .

    $default  reduce using rule 21 (statement_list)


State 106

   22 statement: variable DE_ASSIGN expression .

    $default  reduce using rule 22 (statement)


State 107

   17 parameter_list: identifier_list DE_COLON type .
   18               | identifier_list DE_COLON type . DE_SEMICOLON parameter_list

    DE_SEMICOLON  shift, and go to state 120

    $default  reduce using rule 17 (parameter_list)


State 108

   13 subprogram_head: FUNCTION ID arguments DE_COLON standard_type DE_SEMICOLON .

    $default  reduce using rule 13 (subprogram_head)


State 109

   31 if_statement: IF expression DE_COLON statement .
   32             | IF expression DE_COLON statement . ELSE DE_COLON statement
   33             | IF expression DE_COLON statement . elif_statement
   34             | IF expression DE_COLON statement . elif_statement ELSE DE_COLON statement

    ELIF  shift, and go to state 121
    ELSE  shift, and go to state 122

    $default  reduce using rule 31 (if_statement)

    elif_statement  go to state 123


State 110

   53 in_expression: simple_expression IN simple_expression .

    $default  reduce using rule 53 (in_expression)


State 111

   52 expression: simple_expression relop simple_expression .

    $default  reduce using rule 52 (expression)


State 112

   55 simple_expression: term addop simple_expression .

    $default  reduce using rule 55 (simple_expression)


State 113

   57 term: factor multop term .

    $default  reduce using rule 57 (term)


State 114

   37 while_statement: WHILE expression DE_COLON statement .
   38                | WHILE expression DE_COLON statement . ELSE DE_COLON statement

    ELSE  shift, and go to state 124

    $default  reduce using rule 37 (while_statement)


State 115

   39 for_statement: FOR in_expression DE_COLON statement .
   40              | FOR in_expression DE_COLON statement . ELSE DE_COLON statement

    ELSE  shift, and go to state 125

    $default  reduce using rule 39 (for_statement)


State 116

   42 print_statement: PRINT DE_LP expression DE_RP .

    $default  reduce using rule 42 (print_statement)


State 117

   45 procedure_statement: ID DE_LP actual_parameter_expression DE_RP .

    $default  reduce using rule 45 (procedure_statement)


State 118

   49 expression_list: expression DE_COMMA . expression_list

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression_list      go to state 126
    expression           go to state 103
    in_expression        go to state 63
    simple_expression    go to state 64
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 119

   44 variable: ID DE_LSB expression DE_RSB .

    $default  reduce using rule 44 (variable)


State 120

   18 parameter_list: identifier_list DE_COLON type DE_SEMICOLON . parameter_list

    ID  shift, and go to state 16

    identifier_list  go to state 51
    parameter_list   go to state 127


State 121

   35 elif_statement: ELIF . expression DE_COLON statement elif_statement
   36               | ELIF . expression DE_COLON statement

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 128
    in_expression        go to state 63
    simple_expression    go to state 64
    term                 go to state 65
    factor               go to state 66
    sign                 go to state 67


State 122

   32 if_statement: IF expression DE_COLON statement ELSE . DE_COLON statement

    DE_COLON  shift, and go to state 129


State 123

   33 if_statement: IF expression DE_COLON statement elif_statement .
   34             | IF expression DE_COLON statement elif_statement . ELSE DE_COLON statement

    ELSE  shift, and go to state 130

    $default  reduce using rule 33 (if_statement)


State 124

   38 while_statement: WHILE expression DE_COLON statement ELSE . DE_COLON statement

    DE_COLON  shift, and go to state 131


State 125

   40 for_statement: FOR in_expression DE_COLON statement ELSE . DE_COLON statement

    DE_COLON  shift, and go to state 132


State 126

   49 expression_list: expression DE_COMMA expression_list .

    $default  reduce using rule 49 (expression_list)


State 127

   18 parameter_list: identifier_list DE_COLON type DE_SEMICOLON parameter_list .

    $default  reduce using rule 18 (parameter_list)


State 128

   35 elif_statement: ELIF expression . DE_COLON statement elif_statement
   36               | ELIF expression . DE_COLON statement

    DE_COLON  shift, and go to state 133


State 129

   32 if_statement: IF expression DE_COLON statement ELSE DE_COLON . statement

    BEGIN_BODY  shift, and go to state 21
    IF          shift, and go to state 31
    NOP         shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    RETURN      shift, and go to state 35
    PRINT       shift, and go to state 36
    ID          shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 134
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


State 130

   34 if_statement: IF expression DE_COLON statement elif_statement ELSE . DE_COLON statement

    DE_COLON  shift, and go to state 135


State 131

   38 while_statement: WHILE expression DE_COLON statement ELSE DE_COLON . statement

    BEGIN_BODY  shift, and go to state 21
    IF          shift, and go to state 31
    NOP         shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    RETURN      shift, and go to state 35
    PRINT       shift, and go to state 36
    ID          shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 136
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


State 132

   40 for_statement: FOR in_expression DE_COLON statement ELSE DE_COLON . statement

    BEGIN_BODY  shift, and go to state 21
    IF          shift, and go to state 31
    NOP         shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    RETURN      shift, and go to state 35
    PRINT       shift, and go to state 36
    ID          shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 137
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


State 133

   35 elif_statement: ELIF expression DE_COLON . statement elif_statement
   36               | ELIF expression DE_COLON . statement

    BEGIN_BODY  shift, and go to state 21
    IF          shift, and go to state 31
    NOP         shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    RETURN      shift, and go to state 35
    PRINT       shift, and go to state 36
    ID          shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 138
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


State 134

   32 if_statement: IF expression DE_COLON statement ELSE DE_COLON statement .

    $default  reduce using rule 32 (if_statement)


State 135

   34 if_statement: IF expression DE_COLON statement elif_statement ELSE DE_COLON . statement

    BEGIN_BODY  shift, and go to state 21
    IF          shift, and go to state 31
    NOP         shift, and go to state 32
    WHILE       shift, and go to state 33
    FOR         shift, and go to state 34
    RETURN      shift, and go to state 35
    PRINT       shift, and go to state 36
    ID          shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 139
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


State 136

   38 while_statement: WHILE expression DE_COLON statement ELSE DE_COLON statement .

    $default  reduce using rule 38 (while_statement)


State 137

   40 for_statement: FOR in_expression DE_COLON statement ELSE DE_COLON statement .

    $default  reduce using rule 40 (for_statement)


State 138

   35 elif_statement: ELIF expression DE_COLON statement . elif_statement
   36               | ELIF expression DE_COLON statement .

    ELIF  shift, and go to state 121

    $default  reduce using rule 36 (elif_statement)

    elif_statement  go to state 140


State 139

   34 if_statement: IF expression DE_COLON statement elif_statement ELSE DE_COLON statement .

    $default  reduce using rule 34 (if_statement)


State 140

   35 elif_statement: ELIF expression DE_COLON statement elif_statement .

    $default  reduce using rule 35 (elif_statement)
