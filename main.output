Terminals unused in grammar

   THEN
   OTHER
   DE_DOT


State 63 conflicts: 1 shift/reduce
State 107 conflicts: 1 shift/reduce
State 111 conflicts: 1 shift/reduce
State 119 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 131 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: MAINPROG ID DE_SEMICOLON declarations subprogram_declarations compound_statement

    2 declarations: type identifier_list DE_SEMICOLON declarations
    3             | /* empty */

    4 identifier_list: ID
    5                | ID DE_COMMA identifier_list

    6 type: standard_type
    7     | standard_type DE_LSB INTEGER DE_RSB

    8 standard_type: INTEGER
    9              | FLOAT

   10 subprogram_declarations: subprogram_declaration subprogram_declarations
   11                        | /* empty */

   12 subprogram_declaration: subprogram_head declarations compound_statement

   13 subprogram_head: FUNCTION ID arguments DE_COLON standard_type DE_SEMICOLON
   14                | PROCEDURE ID arguments DE_SEMICOLON

   15 arguments: DE_LP parameter_list DE_RP
   16          | /* empty */

   17 parameter_list: identifier_list DE_COLON type
   18               | identifier_list DE_COLON type DE_SEMICOLON

   19 compound_statement: BEGIN statement_list END

   20 statement_list: statement
   21               | statement DE_SEMICOLON statement_list

   22 statement: variable DE_ASSIGN expression
   23          | print_statement
   24          | procedure_statement
   25          | compound_statement
   26          | if_statement
   27          | while_statement
   28          | for_statement
   29          | RETURN expression
   30          | NOP

   31 if_statement: IF expression DE_COLON statement elif_statement
   32             | IF expression DE_COLON statement elif_statement ELSE DE_COLON statement

   33 elif_statement: ELIF expression DE_COLON statement elif_statement
   34               | /* empty */

   35 while_statement: WHILE expression DE_COLON statement
   36                | WHILE expression DE_COLON statement ELSE DE_COLON statement

   37 for_statement: FOR expression IN expression DE_COLON statement
   38              | FOR expression IN expression DE_COLON statement ELSE DE_COLON statement

   39 print_statement: PRINT
   40                | PRINT DE_LP expression DE_RP

   41 variable: ID
   42         | ID DE_LSB expression DE_RSB

   43 procedure_statement: ID DE_LP actual_parameter_expression DE_RP

   44 actual_parameter_expression: expression_list
   45                            | /* empty */

   46 expression_list: expression
   47                | expression DE_COMMA expression_list

   48 expression: simple_expression
   49           | simple_expression relop simple_expression

   50 simple_expression: term
   51                  | term addop simple_expression

   52 term: factor
   53     | factor multop term

   54 factor: INTEGER
   55       | FLOAT
   56       | variable
   57       | procedure_statement
   58       | OP_NOT factor
   59       | sign factor

   60 sign: OP_PLUS
   61     | OP_MINUS

   62 relop: OP_GT
   63      | OP_GE
   64      | OP_LT
   65      | OP_LE
   66      | OP_EQ
   67      | OP_NE
   68      | IN

   69 addop: OP_PLUS
   70      | OP_MINUS

   71 multop: OP_MULT
   72       | OP_DIV


Terminals, with rules where they appear

$end (0) 0
error (256)
MAINPROG (258) 1
FUNCTION (259) 13
PROCEDURE (260) 14
BEGIN (261) 19
END (262) 19
IF (263) 31 32
THEN (264)
ELIF (265) 33
ELSE (266) 32 36 38
NOP (267) 30
WHILE (268) 35 36
FOR (269) 37 38
RETURN (270) 29
PRINT (271) 39 40
IN (272) 37 38 68
ID (273) 1 4 5 13 14 41 42 43
INTEGER (274) 7 8 54
FLOAT (275) 9 55
OTHER (276)
OP_PLUS (277) 60 69
OP_MINUS (278) 61 70
OP_MULT (279) 71
OP_DIV (280) 72
OP_LT (281) 64
OP_GT (282) 62
OP_NE (283) 67
OP_LE (284) 65
OP_GE (285) 63
OP_EQ (286) 66
OP_NOT (287) 58
DE_SEMICOLON (288) 1 2 13 14 18 21
DE_COMMA (289) 5 47
DE_DOT (290)
DE_ASSIGN (291) 22
DE_LP (292) 15 40 43
DE_RP (293) 15 40 43
DE_LSB (294) 7 42
DE_RSB (295) 7 42
DE_COLON (296) 13 17 18 31 32 33 35 36 37 38


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
declarations (44)
    on left: 2 3, on right: 1 2 12
identifier_list (45)
    on left: 4 5, on right: 2 5 17 18
type (46)
    on left: 6 7, on right: 2 17 18
standard_type (47)
    on left: 8 9, on right: 6 7 13
subprogram_declarations (48)
    on left: 10 11, on right: 1 10
subprogram_declaration (49)
    on left: 12, on right: 10
subprogram_head (50)
    on left: 13 14, on right: 12
arguments (51)
    on left: 15 16, on right: 13 14
parameter_list (52)
    on left: 17 18, on right: 15
compound_statement (53)
    on left: 19, on right: 1 12 25
statement_list (54)
    on left: 20 21, on right: 19 21
statement (55)
    on left: 22 23 24 25 26 27 28 29 30, on right: 20 21 31 32 33 35
    36 37 38
if_statement (56)
    on left: 31 32, on right: 26
elif_statement (57)
    on left: 33 34, on right: 31 32 33
while_statement (58)
    on left: 35 36, on right: 27
for_statement (59)
    on left: 37 38, on right: 28
print_statement (60)
    on left: 39 40, on right: 23
variable (61)
    on left: 41 42, on right: 22 56
procedure_statement (62)
    on left: 43, on right: 24 57
actual_parameter_expression (63)
    on left: 44 45, on right: 43
expression_list (64)
    on left: 46 47, on right: 44 47
expression (65)
    on left: 48 49, on right: 22 29 31 32 33 35 36 37 38 40 42 46 47
simple_expression (66)
    on left: 50 51, on right: 48 49 51
term (67)
    on left: 52 53, on right: 50 51 53
factor (68)
    on left: 54 55 56 57 58 59, on right: 52 53 58 59
sign (69)
    on left: 60 61, on right: 59
relop (70)
    on left: 62 63 64 65 66 67 68, on right: 49
addop (71)
    on left: 69 70, on right: 51
multop (72)
    on left: 71 72, on right: 53


state 0

    0 $accept: . program $end

    MAINPROG  shift, and go to state 1

    program  go to state 2


state 1

    1 program: MAINPROG . ID DE_SEMICOLON declarations subprogram_declarations compound_statement

    ID  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: MAINPROG ID . DE_SEMICOLON declarations subprogram_declarations compound_statement

    DE_SEMICOLON  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: MAINPROG ID DE_SEMICOLON . declarations subprogram_declarations compound_statement

    INTEGER  shift, and go to state 6
    FLOAT    shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 8
    type           go to state 9
    standard_type  go to state 10


state 6

    8 standard_type: INTEGER .

    $default  reduce using rule 8 (standard_type)


state 7

    9 standard_type: FLOAT .

    $default  reduce using rule 9 (standard_type)


state 8

    1 program: MAINPROG ID DE_SEMICOLON declarations . subprogram_declarations compound_statement

    FUNCTION   shift, and go to state 11
    PROCEDURE  shift, and go to state 12

    $default  reduce using rule 11 (subprogram_declarations)

    subprogram_declarations  go to state 13
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


state 9

    2 declarations: type . identifier_list DE_SEMICOLON declarations

    ID  shift, and go to state 16

    identifier_list  go to state 17


state 10

    6 type: standard_type .
    7     | standard_type . DE_LSB INTEGER DE_RSB

    DE_LSB  shift, and go to state 18

    $default  reduce using rule 6 (type)


state 11

   13 subprogram_head: FUNCTION . ID arguments DE_COLON standard_type DE_SEMICOLON

    ID  shift, and go to state 19


state 12

   14 subprogram_head: PROCEDURE . ID arguments DE_SEMICOLON

    ID  shift, and go to state 20


state 13

    1 program: MAINPROG ID DE_SEMICOLON declarations subprogram_declarations . compound_statement

    BEGIN  shift, and go to state 21

    compound_statement  go to state 22


state 14

   10 subprogram_declarations: subprogram_declaration . subprogram_declarations

    FUNCTION   shift, and go to state 11
    PROCEDURE  shift, and go to state 12

    $default  reduce using rule 11 (subprogram_declarations)

    subprogram_declarations  go to state 23
    subprogram_declaration   go to state 14
    subprogram_head          go to state 15


state 15

   12 subprogram_declaration: subprogram_head . declarations compound_statement

    INTEGER  shift, and go to state 6
    FLOAT    shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 24
    type           go to state 9
    standard_type  go to state 10


state 16

    4 identifier_list: ID .
    5                | ID . DE_COMMA identifier_list

    DE_COMMA  shift, and go to state 25

    $default  reduce using rule 4 (identifier_list)


state 17

    2 declarations: type identifier_list . DE_SEMICOLON declarations

    DE_SEMICOLON  shift, and go to state 26


state 18

    7 type: standard_type DE_LSB . INTEGER DE_RSB

    INTEGER  shift, and go to state 27


state 19

   13 subprogram_head: FUNCTION ID . arguments DE_COLON standard_type DE_SEMICOLON

    DE_LP  shift, and go to state 28

    $default  reduce using rule 16 (arguments)

    arguments  go to state 29


state 20

   14 subprogram_head: PROCEDURE ID . arguments DE_SEMICOLON

    DE_LP  shift, and go to state 28

    $default  reduce using rule 16 (arguments)

    arguments  go to state 30


state 21

   19 compound_statement: BEGIN . statement_list END

    BEGIN   shift, and go to state 21
    IF      shift, and go to state 31
    NOP     shift, and go to state 32
    WHILE   shift, and go to state 33
    FOR     shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    ID      shift, and go to state 37

    compound_statement   go to state 38
    statement_list       go to state 39
    statement            go to state 40
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 22

    1 program: MAINPROG ID DE_SEMICOLON declarations subprogram_declarations compound_statement .

    $default  reduce using rule 1 (program)


state 23

   10 subprogram_declarations: subprogram_declaration subprogram_declarations .

    $default  reduce using rule 10 (subprogram_declarations)


state 24

   12 subprogram_declaration: subprogram_head declarations . compound_statement

    BEGIN  shift, and go to state 21

    compound_statement  go to state 47


state 25

    5 identifier_list: ID DE_COMMA . identifier_list

    ID  shift, and go to state 16

    identifier_list  go to state 48


state 26

    2 declarations: type identifier_list DE_SEMICOLON . declarations

    INTEGER  shift, and go to state 6
    FLOAT    shift, and go to state 7

    $default  reduce using rule 3 (declarations)

    declarations   go to state 49
    type           go to state 9
    standard_type  go to state 10


state 27

    7 type: standard_type DE_LSB INTEGER . DE_RSB

    DE_RSB  shift, and go to state 50


state 28

   15 arguments: DE_LP . parameter_list DE_RP

    ID  shift, and go to state 16

    identifier_list  go to state 51
    parameter_list   go to state 52


state 29

   13 subprogram_head: FUNCTION ID arguments . DE_COLON standard_type DE_SEMICOLON

    DE_COLON  shift, and go to state 53


state 30

   14 subprogram_head: PROCEDURE ID arguments . DE_SEMICOLON

    DE_SEMICOLON  shift, and go to state 54


state 31

   31 if_statement: IF . expression DE_COLON statement elif_statement
   32             | IF . expression DE_COLON statement elif_statement ELSE DE_COLON statement

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 62
    simple_expression    go to state 63
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 32

   30 statement: NOP .

    $default  reduce using rule 30 (statement)


state 33

   35 while_statement: WHILE . expression DE_COLON statement
   36                | WHILE . expression DE_COLON statement ELSE DE_COLON statement

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 67
    simple_expression    go to state 63
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 34

   37 for_statement: FOR . expression IN expression DE_COLON statement
   38              | FOR . expression IN expression DE_COLON statement ELSE DE_COLON statement

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 68
    simple_expression    go to state 63
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 35

   29 statement: RETURN . expression

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 69
    simple_expression    go to state 63
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 36

   39 print_statement: PRINT .
   40                | PRINT . DE_LP expression DE_RP

    DE_LP  shift, and go to state 70

    $default  reduce using rule 39 (print_statement)


state 37

   41 variable: ID .
   42         | ID . DE_LSB expression DE_RSB
   43 procedure_statement: ID . DE_LP actual_parameter_expression DE_RP

    DE_LP   shift, and go to state 71
    DE_LSB  shift, and go to state 72

    $default  reduce using rule 41 (variable)


state 38

   25 statement: compound_statement .

    $default  reduce using rule 25 (statement)


state 39

   19 compound_statement: BEGIN statement_list . END

    END  shift, and go to state 73


state 40

   20 statement_list: statement .
   21               | statement . DE_SEMICOLON statement_list

    DE_SEMICOLON  shift, and go to state 74

    $default  reduce using rule 20 (statement_list)


state 41

   26 statement: if_statement .

    $default  reduce using rule 26 (statement)


state 42

   27 statement: while_statement .

    $default  reduce using rule 27 (statement)


state 43

   28 statement: for_statement .

    $default  reduce using rule 28 (statement)


state 44

   23 statement: print_statement .

    $default  reduce using rule 23 (statement)


state 45

   22 statement: variable . DE_ASSIGN expression

    DE_ASSIGN  shift, and go to state 75


state 46

   24 statement: procedure_statement .

    $default  reduce using rule 24 (statement)


state 47

   12 subprogram_declaration: subprogram_head declarations compound_statement .

    $default  reduce using rule 12 (subprogram_declaration)


state 48

    5 identifier_list: ID DE_COMMA identifier_list .

    $default  reduce using rule 5 (identifier_list)


state 49

    2 declarations: type identifier_list DE_SEMICOLON declarations .

    $default  reduce using rule 2 (declarations)


state 50

    7 type: standard_type DE_LSB INTEGER DE_RSB .

    $default  reduce using rule 7 (type)


state 51

   17 parameter_list: identifier_list . DE_COLON type
   18               | identifier_list . DE_COLON type DE_SEMICOLON

    DE_COLON  shift, and go to state 76


state 52

   15 arguments: DE_LP parameter_list . DE_RP

    DE_RP  shift, and go to state 77


state 53

   13 subprogram_head: FUNCTION ID arguments DE_COLON . standard_type DE_SEMICOLON

    INTEGER  shift, and go to state 6
    FLOAT    shift, and go to state 7

    standard_type  go to state 78


state 54

   14 subprogram_head: PROCEDURE ID arguments DE_SEMICOLON .

    $default  reduce using rule 14 (subprogram_head)


state 55

   54 factor: INTEGER .

    $default  reduce using rule 54 (factor)


state 56

   55 factor: FLOAT .

    $default  reduce using rule 55 (factor)


state 57

   60 sign: OP_PLUS .

    $default  reduce using rule 60 (sign)


state 58

   61 sign: OP_MINUS .

    $default  reduce using rule 61 (sign)


state 59

   58 factor: OP_NOT . factor

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    factor               go to state 79
    sign                 go to state 66


state 60

   56 factor: variable .

    $default  reduce using rule 56 (factor)


state 61

   57 factor: procedure_statement .

    $default  reduce using rule 57 (factor)


state 62

   31 if_statement: IF expression . DE_COLON statement elif_statement
   32             | IF expression . DE_COLON statement elif_statement ELSE DE_COLON statement

    DE_COLON  shift, and go to state 80


state 63

   48 expression: simple_expression .
   49           | simple_expression . relop simple_expression

    IN     shift, and go to state 81
    OP_LT  shift, and go to state 82
    OP_GT  shift, and go to state 83
    OP_NE  shift, and go to state 84
    OP_LE  shift, and go to state 85
    OP_GE  shift, and go to state 86
    OP_EQ  shift, and go to state 87

    IN        [reduce using rule 48 (expression)]
    $default  reduce using rule 48 (expression)

    relop  go to state 88


state 64

   50 simple_expression: term .
   51                  | term . addop simple_expression

    OP_PLUS   shift, and go to state 89
    OP_MINUS  shift, and go to state 90

    $default  reduce using rule 50 (simple_expression)

    addop  go to state 91


state 65

   52 term: factor .
   53     | factor . multop term

    OP_MULT  shift, and go to state 92
    OP_DIV   shift, and go to state 93

    $default  reduce using rule 52 (term)

    multop  go to state 94


state 66

   59 factor: sign . factor

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    factor               go to state 95
    sign                 go to state 66


state 67

   35 while_statement: WHILE expression . DE_COLON statement
   36                | WHILE expression . DE_COLON statement ELSE DE_COLON statement

    DE_COLON  shift, and go to state 96


state 68

   37 for_statement: FOR expression . IN expression DE_COLON statement
   38              | FOR expression . IN expression DE_COLON statement ELSE DE_COLON statement

    IN  shift, and go to state 97


state 69

   29 statement: RETURN expression .

    $default  reduce using rule 29 (statement)


state 70

   40 print_statement: PRINT DE_LP . expression DE_RP

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 98
    simple_expression    go to state 63
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 71

   43 procedure_statement: ID DE_LP . actual_parameter_expression DE_RP

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    $default  reduce using rule 45 (actual_parameter_expression)

    variable                     go to state 60
    procedure_statement          go to state 61
    actual_parameter_expression  go to state 99
    expression_list              go to state 100
    expression                   go to state 101
    simple_expression            go to state 63
    term                         go to state 64
    factor                       go to state 65
    sign                         go to state 66


state 72

   42 variable: ID DE_LSB . expression DE_RSB

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 102
    simple_expression    go to state 63
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 73

   19 compound_statement: BEGIN statement_list END .

    $default  reduce using rule 19 (compound_statement)


state 74

   21 statement_list: statement DE_SEMICOLON . statement_list

    BEGIN   shift, and go to state 21
    IF      shift, and go to state 31
    NOP     shift, and go to state 32
    WHILE   shift, and go to state 33
    FOR     shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    ID      shift, and go to state 37

    compound_statement   go to state 38
    statement_list       go to state 103
    statement            go to state 40
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 75

   22 statement: variable DE_ASSIGN . expression

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 104
    simple_expression    go to state 63
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 76

   17 parameter_list: identifier_list DE_COLON . type
   18               | identifier_list DE_COLON . type DE_SEMICOLON

    INTEGER  shift, and go to state 6
    FLOAT    shift, and go to state 7

    type           go to state 105
    standard_type  go to state 10


state 77

   15 arguments: DE_LP parameter_list DE_RP .

    $default  reduce using rule 15 (arguments)


state 78

   13 subprogram_head: FUNCTION ID arguments DE_COLON standard_type . DE_SEMICOLON

    DE_SEMICOLON  shift, and go to state 106


state 79

   58 factor: OP_NOT factor .

    $default  reduce using rule 58 (factor)


state 80

   31 if_statement: IF expression DE_COLON . statement elif_statement
   32             | IF expression DE_COLON . statement elif_statement ELSE DE_COLON statement

    BEGIN   shift, and go to state 21
    IF      shift, and go to state 31
    NOP     shift, and go to state 32
    WHILE   shift, and go to state 33
    FOR     shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    ID      shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 107
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 81

   68 relop: IN .

    $default  reduce using rule 68 (relop)


state 82

   64 relop: OP_LT .

    $default  reduce using rule 64 (relop)


state 83

   62 relop: OP_GT .

    $default  reduce using rule 62 (relop)


state 84

   67 relop: OP_NE .

    $default  reduce using rule 67 (relop)


state 85

   65 relop: OP_LE .

    $default  reduce using rule 65 (relop)


state 86

   63 relop: OP_GE .

    $default  reduce using rule 63 (relop)


state 87

   66 relop: OP_EQ .

    $default  reduce using rule 66 (relop)


state 88

   49 expression: simple_expression relop . simple_expression

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    simple_expression    go to state 108
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 89

   69 addop: OP_PLUS .

    $default  reduce using rule 69 (addop)


state 90

   70 addop: OP_MINUS .

    $default  reduce using rule 70 (addop)


state 91

   51 simple_expression: term addop . simple_expression

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    simple_expression    go to state 109
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 92

   71 multop: OP_MULT .

    $default  reduce using rule 71 (multop)


state 93

   72 multop: OP_DIV .

    $default  reduce using rule 72 (multop)


state 94

   53 term: factor multop . term

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    term                 go to state 110
    factor               go to state 65
    sign                 go to state 66


state 95

   59 factor: sign factor .

    $default  reduce using rule 59 (factor)


state 96

   35 while_statement: WHILE expression DE_COLON . statement
   36                | WHILE expression DE_COLON . statement ELSE DE_COLON statement

    BEGIN   shift, and go to state 21
    IF      shift, and go to state 31
    NOP     shift, and go to state 32
    WHILE   shift, and go to state 33
    FOR     shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    ID      shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 111
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 97

   37 for_statement: FOR expression IN . expression DE_COLON statement
   38              | FOR expression IN . expression DE_COLON statement ELSE DE_COLON statement

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 112
    simple_expression    go to state 63
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 98

   40 print_statement: PRINT DE_LP expression . DE_RP

    DE_RP  shift, and go to state 113


state 99

   43 procedure_statement: ID DE_LP actual_parameter_expression . DE_RP

    DE_RP  shift, and go to state 114


state 100

   44 actual_parameter_expression: expression_list .

    $default  reduce using rule 44 (actual_parameter_expression)


state 101

   46 expression_list: expression .
   47                | expression . DE_COMMA expression_list

    DE_COMMA  shift, and go to state 115

    $default  reduce using rule 46 (expression_list)


state 102

   42 variable: ID DE_LSB expression . DE_RSB

    DE_RSB  shift, and go to state 116


state 103

   21 statement_list: statement DE_SEMICOLON statement_list .

    $default  reduce using rule 21 (statement_list)


state 104

   22 statement: variable DE_ASSIGN expression .

    $default  reduce using rule 22 (statement)


state 105

   17 parameter_list: identifier_list DE_COLON type .
   18               | identifier_list DE_COLON type . DE_SEMICOLON

    DE_SEMICOLON  shift, and go to state 117

    $default  reduce using rule 17 (parameter_list)


state 106

   13 subprogram_head: FUNCTION ID arguments DE_COLON standard_type DE_SEMICOLON .

    $default  reduce using rule 13 (subprogram_head)


state 107

   31 if_statement: IF expression DE_COLON statement . elif_statement
   32             | IF expression DE_COLON statement . elif_statement ELSE DE_COLON statement

    ELIF  shift, and go to state 118

    ELIF      [reduce using rule 34 (elif_statement)]
    $default  reduce using rule 34 (elif_statement)

    elif_statement  go to state 119


state 108

   49 expression: simple_expression relop simple_expression .

    $default  reduce using rule 49 (expression)


state 109

   51 simple_expression: term addop simple_expression .

    $default  reduce using rule 51 (simple_expression)


state 110

   53 term: factor multop term .

    $default  reduce using rule 53 (term)


state 111

   35 while_statement: WHILE expression DE_COLON statement .
   36                | WHILE expression DE_COLON statement . ELSE DE_COLON statement

    ELSE  shift, and go to state 120

    ELSE      [reduce using rule 35 (while_statement)]
    $default  reduce using rule 35 (while_statement)


state 112

   37 for_statement: FOR expression IN expression . DE_COLON statement
   38              | FOR expression IN expression . DE_COLON statement ELSE DE_COLON statement

    DE_COLON  shift, and go to state 121


state 113

   40 print_statement: PRINT DE_LP expression DE_RP .

    $default  reduce using rule 40 (print_statement)


state 114

   43 procedure_statement: ID DE_LP actual_parameter_expression DE_RP .

    $default  reduce using rule 43 (procedure_statement)


state 115

   47 expression_list: expression DE_COMMA . expression_list

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression_list      go to state 122
    expression           go to state 101
    simple_expression    go to state 63
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 116

   42 variable: ID DE_LSB expression DE_RSB .

    $default  reduce using rule 42 (variable)


state 117

   18 parameter_list: identifier_list DE_COLON type DE_SEMICOLON .

    $default  reduce using rule 18 (parameter_list)


state 118

   33 elif_statement: ELIF . expression DE_COLON statement elif_statement

    ID        shift, and go to state 37
    INTEGER   shift, and go to state 55
    FLOAT     shift, and go to state 56
    OP_PLUS   shift, and go to state 57
    OP_MINUS  shift, and go to state 58
    OP_NOT    shift, and go to state 59

    variable             go to state 60
    procedure_statement  go to state 61
    expression           go to state 123
    simple_expression    go to state 63
    term                 go to state 64
    factor               go to state 65
    sign                 go to state 66


state 119

   31 if_statement: IF expression DE_COLON statement elif_statement .
   32             | IF expression DE_COLON statement elif_statement . ELSE DE_COLON statement

    ELSE  shift, and go to state 124

    ELSE      [reduce using rule 31 (if_statement)]
    $default  reduce using rule 31 (if_statement)


state 120

   36 while_statement: WHILE expression DE_COLON statement ELSE . DE_COLON statement

    DE_COLON  shift, and go to state 125


state 121

   37 for_statement: FOR expression IN expression DE_COLON . statement
   38              | FOR expression IN expression DE_COLON . statement ELSE DE_COLON statement

    BEGIN   shift, and go to state 21
    IF      shift, and go to state 31
    NOP     shift, and go to state 32
    WHILE   shift, and go to state 33
    FOR     shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    ID      shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 126
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 122

   47 expression_list: expression DE_COMMA expression_list .

    $default  reduce using rule 47 (expression_list)


state 123

   33 elif_statement: ELIF expression . DE_COLON statement elif_statement

    DE_COLON  shift, and go to state 127


state 124

   32 if_statement: IF expression DE_COLON statement elif_statement ELSE . DE_COLON statement

    DE_COLON  shift, and go to state 128


state 125

   36 while_statement: WHILE expression DE_COLON statement ELSE DE_COLON . statement

    BEGIN   shift, and go to state 21
    IF      shift, and go to state 31
    NOP     shift, and go to state 32
    WHILE   shift, and go to state 33
    FOR     shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    ID      shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 129
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 126

   37 for_statement: FOR expression IN expression DE_COLON statement .
   38              | FOR expression IN expression DE_COLON statement . ELSE DE_COLON statement

    ELSE  shift, and go to state 130

    ELSE      [reduce using rule 37 (for_statement)]
    $default  reduce using rule 37 (for_statement)


state 127

   33 elif_statement: ELIF expression DE_COLON . statement elif_statement

    BEGIN   shift, and go to state 21
    IF      shift, and go to state 31
    NOP     shift, and go to state 32
    WHILE   shift, and go to state 33
    FOR     shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    ID      shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 131
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 128

   32 if_statement: IF expression DE_COLON statement elif_statement ELSE DE_COLON . statement

    BEGIN   shift, and go to state 21
    IF      shift, and go to state 31
    NOP     shift, and go to state 32
    WHILE   shift, and go to state 33
    FOR     shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    ID      shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 132
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 129

   36 while_statement: WHILE expression DE_COLON statement ELSE DE_COLON statement .

    $default  reduce using rule 36 (while_statement)


state 130

   38 for_statement: FOR expression IN expression DE_COLON statement ELSE . DE_COLON statement

    DE_COLON  shift, and go to state 133


state 131

   33 elif_statement: ELIF expression DE_COLON statement . elif_statement

    ELIF  shift, and go to state 118

    ELIF      [reduce using rule 34 (elif_statement)]
    $default  reduce using rule 34 (elif_statement)

    elif_statement  go to state 134


state 132

   32 if_statement: IF expression DE_COLON statement elif_statement ELSE DE_COLON statement .

    $default  reduce using rule 32 (if_statement)


state 133

   38 for_statement: FOR expression IN expression DE_COLON statement ELSE DE_COLON . statement

    BEGIN   shift, and go to state 21
    IF      shift, and go to state 31
    NOP     shift, and go to state 32
    WHILE   shift, and go to state 33
    FOR     shift, and go to state 34
    RETURN  shift, and go to state 35
    PRINT   shift, and go to state 36
    ID      shift, and go to state 37

    compound_statement   go to state 38
    statement            go to state 135
    if_statement         go to state 41
    while_statement      go to state 42
    for_statement        go to state 43
    print_statement      go to state 44
    variable             go to state 45
    procedure_statement  go to state 46


state 134

   33 elif_statement: ELIF expression DE_COLON statement elif_statement .

    $default  reduce using rule 33 (elif_statement)


state 135

   38 for_statement: FOR expression IN expression DE_COLON statement ELSE DE_COLON statement .

    $default  reduce using rule 38 (for_statement)
